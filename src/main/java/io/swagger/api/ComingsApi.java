/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.2).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.ComingDetails;
import io.swagger.model.ListOfComings;
import io.swagger.model.PostComingDetails;
import io.swagger.model.PutComingDetails;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2018-11-20T18:24:21.559Z[GMT]")

@Api(value = "comings", description = "the comings API")
public interface ComingsApi {

    @ApiOperation(value = "", nickname = "comingsComingIdDelete", notes = "Delete some coming", tags={ "Comings", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Good deleting coming by ID"),
        @ApiResponse(code = 404, message = "Bad deleting coming, not found ID"),
        @ApiResponse(code = 500, message = "Bad deleting coming by ID") })
    @RequestMapping(value = "/comings/{comingId}",
        method = RequestMethod.DELETE)
    ResponseEntity<Void> comingsComingIdDelete(@ApiParam(value = "comingId",required=true) @PathVariable("comingId") Integer comingId);


    @ApiOperation(value = "", nickname = "comingsComingIdGet", notes = "Reading coming by ID", response = ComingDetails.class, tags={ "Comings", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Good reading coming by ID", response = ComingDetails.class),
        @ApiResponse(code = 404, message = "Bad reading coming, not found ID") })
    @RequestMapping(value = "/comings/{comingId}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<ComingDetails> comingsComingIdGet(@ApiParam(value = "comingId",required=true) @PathVariable("comingId") Integer comingId);


    @ApiOperation(value = "", nickname = "comingsComingIdPut", notes = "Modify coming", tags={ "Comings", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Good modify coming by ID"),
        @ApiResponse(code = 404, message = "Bad modify coming, not found ID"),
        @ApiResponse(code = 500, message = "Bad modify coming by ID") })
    @RequestMapping(value = "/comings/{comingId}",
        consumes = { "application/json" },
        method = RequestMethod.PUT)
    ResponseEntity<Void> comingsComingIdPut(@ApiParam(value = "comingId",required=true) @PathVariable("comingId") Integer comingId,@ApiParam(value = ""  )  @Valid @RequestBody PutComingDetails body);


    @ApiOperation(value = "", nickname = "comingsGet", notes = "Reading list of comings", response = ListOfComings.class, tags={ "Comings", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Good reading comings", response = ListOfComings.class) })
    @RequestMapping(value = "/comings",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<ListOfComings> comingsGet();


    @ApiOperation(value = "", nickname = "comingsPost", notes = "", tags={ "Comings", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Good adding coming"),
        @ApiResponse(code = 500, message = "Bad adding coming") })
    @RequestMapping(value = "/comings",
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<Void> comingsPost(@ApiParam(value = ""  )  @Valid @RequestBody PostComingDetails body);

}
