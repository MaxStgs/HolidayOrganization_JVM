/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.2).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.ListOfOrdersFromSite;
import io.swagger.model.OrderFromSiteDetails;
import io.swagger.model.PostOrderFromSiteDetails;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2018-11-20T18:24:21.559Z[GMT]")

@Api(value = "order", description = "the order API")
public interface OrderApi {

    @ApiOperation(value = "", nickname = "orderGet", notes = "Read list of Orders From Site", response = ListOfOrdersFromSite.class, tags={ "Orders", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Good read list of orders from site", response = ListOfOrdersFromSite.class),
        @ApiResponse(code = 500, message = "Bad read list of orders from site") })
    @RequestMapping(value = "/order",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<ListOfOrdersFromSite> orderGet();


    @ApiOperation(value = "", nickname = "orderOrderIdGet", notes = "Read order from site by ID", response = OrderFromSiteDetails.class, tags={ "Orders", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Good read order from site by ID", response = OrderFromSiteDetails.class),
        @ApiResponse(code = 404, message = "Bad read order, not found ID"),
        @ApiResponse(code = 500, message = "Bad read order from site by ID") })
    @RequestMapping(value = "/order/{orderId}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<OrderFromSiteDetails> orderOrderIdGet(@ApiParam(value = "orderId",required=true) @PathVariable("orderId") Integer orderId);


    @ApiOperation(value = "", nickname = "orderPost", notes = "", tags={ "Orders", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Good order"),
        @ApiResponse(code = 500, message = "Bad order") })
    @RequestMapping(value = "/order",
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<Void> orderPost(@ApiParam(value = ""  )  @Valid @RequestBody PostOrderFromSiteDetails body);

}
