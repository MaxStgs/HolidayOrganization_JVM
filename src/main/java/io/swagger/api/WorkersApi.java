/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.2).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.ListOfWorkers;
import io.swagger.model.PostWorkerDetails;
import io.swagger.model.PutWorkerDetails;
import io.swagger.model.WorkerDetails;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2018-11-20T18:24:21.559Z[GMT]")

@Api(value = "workers", description = "the workers API")
public interface WorkersApi {

    @ApiOperation(value = "", nickname = "workersGet", notes = "Read workers", response = ListOfWorkers.class, tags={ "Workers", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Good read workers", response = ListOfWorkers.class),
        @ApiResponse(code = 500, message = "Bad read workers") })
    @RequestMapping(value = "/workers",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<ListOfWorkers> workersGet();


    @ApiOperation(value = "", nickname = "workersOrderIdGet", notes = "Read worker by order ID", tags={ "Workers","Orders", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Good read worker by ID"),
        @ApiResponse(code = 404, message = "Bad read worker, not found ID"),
        @ApiResponse(code = 500, message = "Bad read worker by ID") })
    @RequestMapping(value = "/workers/{orderId}",
        method = RequestMethod.GET)
    ResponseEntity<Void> workersOrderIdGet(@ApiParam(value = "orderId",required=true) @PathVariable("orderId") Integer orderId);


    @ApiOperation(value = "", nickname = "workersPost", notes = "Add worker", tags={ "Workers", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Good add worker"),
        @ApiResponse(code = 500, message = "Bad add worker") })
    @RequestMapping(value = "/workers",
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<Void> workersPost(@ApiParam(value = ""  )  @Valid @RequestBody PostWorkerDetails body);


    @ApiOperation(value = "", nickname = "workersWorkerIdGet", notes = "Read worker by ID", response = WorkerDetails.class, tags={ "Workers", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Good read worker by ID", response = WorkerDetails.class),
        @ApiResponse(code = 404, message = "Bad read worker, not found ID"),
        @ApiResponse(code = 500, message = "Bad read worker by ID") })
    @RequestMapping(value = "/workers/{workerId}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<WorkerDetails> workersWorkerIdGet(@ApiParam(value = "workerId",required=true) @PathVariable("workerId") Integer workerId);


    @ApiOperation(value = "", nickname = "workersWorkerIdPut", notes = "Modify worker by ID", tags={ "Workers", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Good modify worker by ID"),
        @ApiResponse(code = 404, message = "Bad modify worker, not found ID"),
        @ApiResponse(code = 500, message = "Bad modify worker by ID") })
    @RequestMapping(value = "/workers/{workerId}",
        consumes = { "application/json" },
        method = RequestMethod.PUT)
    ResponseEntity<Void> workersWorkerIdPut(@ApiParam(value = "workerId",required=true) @PathVariable("workerId") Integer workerId,@ApiParam(value = ""  )  @Valid @RequestBody PutWorkerDetails body);

}
