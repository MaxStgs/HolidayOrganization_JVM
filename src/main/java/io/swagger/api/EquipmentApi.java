/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.2).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.EquipmentDetails;
import io.swagger.model.ListOfEquipments;
import io.swagger.model.PostEquipmentDetails;
import io.swagger.model.PutEquipmentDetails;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2018-11-20T18:24:21.559Z[GMT]")

@Api(value = "equipment", description = "the equipment API")
public interface EquipmentApi {

    @ApiOperation(value = "", nickname = "equipmentEquipmentIdGet", notes = "Read equipment by ID", response = EquipmentDetails.class, tags={ "Equipments", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Good read equipment by ID", response = EquipmentDetails.class),
        @ApiResponse(code = 404, message = "Bad read equipment, not found ID"),
        @ApiResponse(code = 500, message = "Bad read equipment by ID") })
    @RequestMapping(value = "/equipment/{equipmentId}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<EquipmentDetails> equipmentEquipmentIdGet(@ApiParam(value = "Equipment ID",required=true) @PathVariable("equipmentId") Integer equipmentId);


    @ApiOperation(value = "", nickname = "equipmentEquipmentIdPut", notes = "Modify equipment by ID", tags={ "Equipments", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Good modify equipment byID"),
        @ApiResponse(code = 404, message = "Bad read equipment, not found ID"),
        @ApiResponse(code = 500, message = "Bad read equipment by ID") })
    @RequestMapping(value = "/equipment/{equipmentId}",
        consumes = { "application/json" },
        method = RequestMethod.PUT)
    ResponseEntity<Void> equipmentEquipmentIdPut(@ApiParam(value = "Equipment ID",required=true) @PathVariable("equipmentId") Integer equipmentId,@ApiParam(value = ""  )  @Valid @RequestBody PutEquipmentDetails body);


    @ApiOperation(value = "", nickname = "equipmentGet", notes = "Read equipments", response = ListOfEquipments.class, tags={ "Equipments", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Good read equipments", response = ListOfEquipments.class),
        @ApiResponse(code = 500, message = "Bad read equipments") })
    @RequestMapping(value = "/equipment",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<ListOfEquipments> equipmentGet();


    @ApiOperation(value = "", nickname = "equipmentOrderIdGet", notes = "Read equipments by ID", response = EquipmentDetails.class, tags={ "Equipments","Orders", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Good read equipments by Order ID", response = EquipmentDetails.class),
        @ApiResponse(code = 404, message = "Bad read equipment, not found order ID"),
        @ApiResponse(code = 500, message = "Bad read equipment by ID") })
    @RequestMapping(value = "/equipment/{orderId}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<EquipmentDetails> equipmentOrderIdGet(@ApiParam(value = "orderId",required=true) @PathVariable("orderId") Integer orderId);


    @ApiOperation(value = "", nickname = "equipmentPost", notes = "Add equipment", tags={ "Equipments", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Good add equipment"),
        @ApiResponse(code = 500, message = "Bad add equipment") })
    @RequestMapping(value = "/equipment",
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<Void> equipmentPost(@ApiParam(value = ""  )  @Valid @RequestBody PostEquipmentDetails body);

}
